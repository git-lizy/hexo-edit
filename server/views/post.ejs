<link rel="stylesheet" href="/css/editormd.min.css" />
<link rel="stylesheet" href="/css/editor.css" />
<script src="/editormd.min.js"></script>
<script src="/js/hintDialog.js"></script>
<script src="/js/dateFormat.js"></script>
<script src="/js/uploadImg.js"></script>
<script src="/js/base.js"></script>
<div class="post-left">
    <div id="post-group">
        <% posts.forEach(function(post){ %>
            <a href="javascript:void(0)" data-href="<%= post %>" class="list-group-item" post style="position: relative;"><%= post %></a>
        <% }); %>
    </div>
    <div class="btn-bottom-box">
        <a name="new" href="javascript:void(0)" data-href="shell?action=new_post" wss type="button" class="btn btn-default">新增</a>
        <a name="delete" href="javascript:void(0)" data-href="shell?action=delete_post" wss type="button" class="btn btn-default" post-id="#">删除</a>
    </div>
</div>
<div class="btn-group"> 
    <div class="el-form-item__content">
        <div class="input__title flex1 el-input">
            <span>文章管理：</span><input type="text" autocomplete="off" id="postTitle" post-id="#" maxlength="100" placeholder="2020-11-18" class="el-input__inner"/>
            <!-- <span class="el-input__suffix"><span class="el-input__suffix-inner">
            <span class="el-input__count"><span class="el-input__count-inner">10/100</span></span></span>
            </span> -->
        </div>
        <div class="article-bar__user-box flex flex--row flex--align-center">
            <button type="button" class="el-button btn btn-save el-button-save">保存</button>
            <button type="button" class="el-button btn btn-publish el-button-primary">发布</button>
        </div>
    </div>
    <div id="editor">
    </div>
</div>

<script>
    $("a[post]").bind("click", getPost);

    firstClickItem();
    $("a[wss]").bind("click", function (e) {
        e.preventDefault();
        let href = $(this).attr("data-href");
        switch ($(this).attr("name")) {
            case "new":
                let name = '文章' + dateFormat('mmss');
                $.get(href, {
                    post: name
                }, function (data, status) {
                    if (status === "success" && data.success) {
                        addNode(data);
                    }
                });
                break;
            case "delete":
                let that = this;
                $.MsgBox.Confirm('温馨提示！', '确认删除当前文章？', function() {
                    let pId =  $(that).attr("post-id");
                    $.get(href, {
                        post: pId
                    }, function (data, status) {
                        if (status === "success" && data.success) {
                            deleteNode(data.pId);
                            swal(data.msg, 'success');
                        }
                    });
                })
                break;
            default:
                swal("未知操作", "error");
                break;
        }
        return false;
    });
    $(".btn-save").click(function () {
        savePost(true);
    });
    $(".btn-publish").click(function () {
        $('.editormd-container-mask').show();
        $.get("shell?action=clean", function (data, status, xhr) {
            if (status === "success") {  
                $.get("shell?action=generate", function (data, status, xhr) {
                    if (status === "success") {
                        setTimeout(() => {
                            $('.editormd-container-mask').hide();
                            swal('发布成功', 'success'); 
                        }, 2000);
                    }
                });
            } else {
                $('.editormd-container-mask').hide();
            }
        })
    });

    // $("#search").bind('input', throttle(function(e) {
    //     let val = $(this).val();
    //     let aList = document.querySelectorAll('.list-group-item');
    //     if (!val) {
    //         aList.forEach( aEl => {
    //             aEl.style.display = 'block';
    //         })
    //     } else {
    //         aList.forEach( aEl => {
    //             let text = aEl.innerText;
    //             if (!text || !text.indexOf(val) === -1) {
    //                 aEl.style.display = 'none';
    //             }
    //         })
    //     }
    // }, 1500));

    function getPost(e) {
        let postId = $(this).attr("data-href");
        $.get('getPost', {
            post: postId
        }, function (data, status, xhr) {
            if (status === "success" && data.success) {
                toggleStyle(e, postId);
                if (window.postEditor) {
                    window.postEditor = postEditor.setMarkdown(data.data);
                    window.postEditor.resize();
                } else {
                    registerMarkdown(data.data);
                }
                $('#postTitle').val('');
                $('a[post-id]').attr("post-id", postId);
                let autoSaveTime = <%= autoSave %>;
                if (autoSaveTime) {
                    if (window.autoSave) clearInterval(window.autoSave);
                    window.autoSave = setInterval(() => {
                        savePost(false);
                    }, autoSaveTime);
                }
            } else {
                swal("\n获取文章失败", "error");
            }
        });
        $.get('shell?action=get_postname',{
            post: postId
        });
    }

    function deleteNode(id) {
        $('#post-group a[data-href="'+id+'"]').remove();
        firstClickItem();
    }

    function firstClickItem() {
        $("a[post]")[0] && $("a[post]")[0].click();
    }

    function addNode(data) {
        let a = document.createElement('a');
        a.href = "javascript:void(0)";
        a.className = "list-group-item";
        a.setAttribute('data-href', data.name);
        a.setAttribute('post', '');
        a.style = "position: relative;display:none";
        a.innerText = data.name;
        $('#post-group').append(a);
        $(a).bind('click', getPost);
        $('.editormd-container-mask').show();
        setTimeout( () => {
            swal(data.msg, 'success');
            $(a).show();
            $('.editormd-container-mask').hide();
            $(a).click();
        }, 1500);
    }

    function savePost(isHint) {
        let currentEl = $(".list-group-item.active");
        let titleEl = $('#postTitle');
        let old_name = $(titleEl).attr('post-id');
        let val = $(titleEl).val();
        if (val && old_name !== val) {
            $.ajax({
                url: 'shell?action=rename_post',
                data: {
                    old_name: old_name,
                    new_name: val
                },
                type: 'get',
                success : function(data) {
                    if(data.success) {
                        let name = data.new_name;
                        $(titleEl).attr('post-id', name);
                        $(currentEl).text(name);
                        $(currentEl).attr("data-href", name);
                        $.ajax({
                            url: 'shell?action=save_post',
                            data: {
                                post: name,
                                data: $(".editormd-markdown-textarea").val()
                            },
                            type: 'post',
                            dataType: 'json',
                            success: function (data) {
                                if(isHint) swal(data.msg, "success");
                            }
                        })
                    }
                }
            })
        } else {
            $.ajax({
                url: 'shell?action=save_post',
                data: {
                    post: $(currentEl).text(),
                    data: $(".editormd-markdown-textarea").val()
                },
                type: 'post',
                dataType: 'json',
                success: function (data) {
                    if(isHint) swal(data.msg, "success");
                }
            })
        }
    }

    function toggleStyle(e, pId) {
        $(".list-group-item").removeClass("active");
        $(e.target).addClass("active");
        let titleEl = document.getElementById('postTitle');
        let title = pId || '#';
        $(titleEl).attr('post-id', title);
        $(titleEl).attr('placeholder', title);
    }

    function registerMarkdown(data) {
        window.postEditor = editormd('editor', {
            width: "100%",
            height: "95%",
            markdown: data, // dynamic set Markdown text
            path: "/lib/", // Autoload modules mode, codemirror, marked... dependents libs path
            onload : function() {
                initPasteDragImg(this);
            }
        });
    }

    document.addEventListener('keydown', function(e) {
        if (e.ctrlKey && e.which === 83) {
            e.preventDefault();
            nextTick(() => {
                savePost(true);
            }) 
        }
    })
</script>